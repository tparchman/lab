scale_y_continuous(limits = c(0, NA)) +
scale_x_date(breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedRMSE
View(combinedLong)
combinedLong <- combined %>%
select(RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedLong <- combined %>%
select(Date, RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedRMSE = ggplot(data = combinedLong, aes(x = Date, y = RMSE, color = Model)) +
geom_line() +
geom_point() +
scale_color_manual(values = getPalette(20)) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedRMSE
getPalette = colorRampPalette(brewer.pal(12, "Set2"))
getPalette = colorRampPalette(brewer.pal(8, "Set2"))
combinedLong <- combined %>%
select(Date, RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedRMSE = ggplot(data = combinedLong, aes(x = Date, y = RMSE, color = Model)) +
geom_line() +
geom_point() +
scale_color_manual(values = getPalette(20)) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedRMSE
main <- ggplot(data = vwc_with_weather, aes(x = Date, y = vwc)) +
geom_area(position = "identity", fill = "#0A66BA", alpha = 0.4,
aes(y = Ppt_mm_Tot / scale_coef)) +
geom_point(color = "#007478", shape = 1) +
geom_line(color = "#007478") +
scale_y_continuous(name = "VWC",
limits = c(0, 0.6),
sec.axis = sec_axis(~.*scale_coef, name = "Precip.")) +
theme_bw()
patchwork4 <- main + combinedRMSE + plot_layout(ncl = 1)
patchwork4 <- main + combinedRMSE + plot_layout(nc0l = 1)
patchwork4 <- main + combinedRMSE + plot_layout(nc0ol = 1)
patchwork4 <- main + combinedRMSE + plot_layout(ncol = 1)
patchwork4
combinedLong <- combined %>%
select(Date, RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedRMSE = ggplot(data = combinedLong, aes(x = Date, y = RMSE, color = Model)) +
geom_line() +
geom_point() +
scale_color_manual(values = getPalette(20)) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c("2013-06-15", "2013-10-10"),
breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedLong <- combined %>%
select(Date, RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedRMSE = ggplot(data = combinedLong, aes(x = Date, y = RMSE, color = Model)) +
geom_line() +
geom_point() +
scale_color_manual(values = getPalette(20)) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c(as.Date("2013-06-15"), as.Date("2013-10-10")),
breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedRMSE
combinedLong <- combined %>%
select(Date, RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedRMSE = ggplot(data = combinedLong, aes(x = Date, y = RMSE, color = Model)) +
geom_line() +
geom_point() +
scale_color_manual(values = getPalette(20)) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c(as.Date("2013-06-20"), as.Date("2013-10-5")),
breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedRMSE
main <- ggplot(data = vwc_with_weather, aes(x = Date, y = vwc)) +
geom_area(position = "identity", fill = "#0A66BA", alpha = 0.4,
aes(y = Ppt_mm_Tot / scale_coef)) +
geom_point(color = "#007478", shape = 1) +
geom_line(color = "#007478") +
scale_y_continuous(name = "VWC",
limits = c(0, 0.6),
sec.axis = sec_axis(~.*scale_coef, name = "Precip.")) +
scale_x_date(limits = c(as.Date("2013-06-20"), as.Date("2013-10-5")),
breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedLong <- combined %>%
select(Date, RMSE3, RMSE6, RMSE8, RMSE9, RMSE11, RMSE14, RMSE15, RMSE16, RMSE17, RMSE18, RMSE19, RMSE20) %>%
pivot_longer(c(2:ncol(.)), names_to = "Model", values_to = "RMSE")
combinedRMSE = ggplot(data = combinedLong, aes(x = Date, y = RMSE, color = Model)) +
geom_line() +
geom_point() +
scale_color_manual(values = getPalette(20)) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c(as.Date("2013-06-20"), as.Date("2013-10-5")),
breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
combinedRMSE
patchwork4 <- main + combinedRMSE + plot_layout(ncol = 1)
patchwork4
covList3 <- c("Ppt_mm_Tot", "Ppt_mm_Tot_lag1", "Air_TempC_Max", "Relative_Humidity_Min")
estimates3 <- getForecastUk(covList = covList3,
fitData = lagData,
response = "vwc",
modelType = stanb1b2b3b4b5,
forecastData = lagData14,
ciPct = 80)
something <- estimates3 %>%
rename(Day = Date,
Forecast = mean,
LowerPI = lower,
UpperPI = upper) %>%
filter(Day >= "2014-06-15") %>%
mutate(Day = paste(month(Day), day(Day), year(Day), sep = "-"))
write.csv(something, "LoriaRomeroChallenge1.csv", col.names = TRUE, row.names = FALSE)
pivot_longer(c(2:4), names_to = "Parameters", values_to = "VWC")
ggplot(data = something, aes(x = Date, y = VWC, group = Parameters)) +
geom_point() +
geom_line()
something <- estimates3 %>%
rename(Day = Date,
Forecast = mean,
LowerPI = lower,
UpperPI = upper) %>%
filter(Day >= "2014-06-15") %>%
mutate(Day = paste(month(Day), day(Day), year(Day), sep = "-")) %>%
pivot_longer(c(2:4), names_to = "Parameters", values_to = "VWC")
ggplot(data = something, aes(x = Date, y = VWC, group = Parameters)) +
geom_point() +
geom_line()
ggplot(data = something, aes(x = Day, y = VWC, group = Parameters)) +
geom_point() +
geom_line()
something <- estimates3 %>%
rename(Day = Date,
Forecast = mean,
LowerPI = lower,
UpperPI = upper) %>%
# filter(Day >= "2014-06-15") %>%
# mutate(Day = paste(month(Day), day(Day), year(Day), sep = "-")) %>%
pivot_longer(c(2:4), names_to = "Parameters", values_to = "VWC")
ggplot(data = something, aes(x = Day, y = VWC, group = Parameters)) +
geom_point() +
geom_line()
ggplot(data = something, aes(x = Day, y = VWC, group = Parameters)) +
geom_point() +
geom_line() +
theme_bw()
final <- ggplot(data = something, aes(x = Day, y = VWC, group = Parameters)) +
geom_point() +
geom_line() +
theme_bw()
final
intervalPlotUk <- function(parDF, yName, intervalPct){
upperName = paste("Pred. Upper ", as.character(intervalPct), sep = "")
lowerName = paste("Pred. Lower ", as.character(intervalPct), sep = "")
PredCIntervals <- data.frame(matrix(ncol = 7, nrow = nrow(parDF))) %>%
mutate(X1 = parDF[, "Date"],
X2 = parDF[, "mean"],
X3 = parDF[, "upper"],
X4 = parDF[, "lower"],
X6 = parDF[, "upper"],
X7 = parDF[, "lower"]) %>%
rename(Date = X1,
"Pred. Mean" = X2,
!!upperName := X3,
!!lowerName := X4,
Observed = X5,
ribbonU = X6,
ribbonL = X7) %>%
pivot_longer(c(2:5), names_to = "Parameters", values_to = yName) %>%
mutate(Parameters = factor(Parameters, levels = c("Observed", "Pred. Mean", upperName, lowerName)))
ggplot(PredCIntervals,
aes(x = Date, y = .data[[yName]], linetype = Parameters, color = Parameters, shape = Parameters)) +
geom_line() +
geom_point(data = subset(PredCIntervals,
Parameters == "Observed" | Parameters == "Pred. Mean")) +
scale_shape_manual(values = c(16, 1, NA, NA)) +
scale_linetype_manual(values = c("solid", "dashed", "dotted", "dotted")) +
scale_color_manual(values = c("#166170", "#166170", "#616AA0", "#616AA0")) +
geom_ribbon(aes(x = Date, ymin = ribbonL, ymax = ribbonU),
inherit.aes = FALSE, fill = "#616AA0", alpha = 0.2) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(breaks = "1 week",
date_labels = "%b %d") +
theme_bw()
}
intervalPlotUk(parDF = estimates3, yValues = "VWC", intervalPct = 80)
intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
final
last <- geom_area(position = "identity", alpha = 0.4) +
geom_line(y = weather$Solar_Incoming_Total, linetype = "dashed") +
scale_fill_manual(values = c("#E2910F", "#08ABB2")) +
theme_bw() +
scale_y_continuous(name = "Precip. (mm)") +
scale_x_date(limits = c(as_date("2000-06-10"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
intervalPlotUk <- function(parDF, yName, intervalPct){
upperName = paste("Pred. Upper ", as.character(intervalPct), sep = "")
lowerName = paste("Pred. Lower ", as.character(intervalPct), sep = "")
PredCIntervals <- data.frame(matrix(ncol = 7, nrow = nrow(parDF))) %>%
mutate(X1 = parDF[, "Date"],
X2 = parDF[, "mean"],
X3 = parDF[, "upper"],
X4 = parDF[, "lower"],
X6 = parDF[, "upper"],
X7 = parDF[, "lower"]) %>%
rename(Date = X1,
"Pred. Mean" = X2,
!!upperName := X3,
!!lowerName := X4,
Observed = X5,
ribbonU = X6,
ribbonL = X7) %>%
pivot_longer(c(2:5), names_to = "Parameters", values_to = yName) %>%
mutate(Parameters = factor(Parameters, levels = c("Observed", "Pred. Mean", upperName, lowerName)))
ggplot(PredCIntervals,
aes(x = Date, y = .data[[yName]], linetype = Parameters, color = Parameters, shape = Parameters)) +
geom_line() +
geom_point(data = subset(PredCIntervals,
Parameters == "Observed" | Parameters == "Pred. Mean")) +
scale_shape_manual(values = c(16, 1, NA, NA)) +
scale_linetype_manual(values = c("solid", "dashed", "dotted", "dotted")) +
scale_color_manual(values = c("#166170", "#166170", "#616AA0", "#616AA0")) +
geom_ribbon(aes(x = Date, ymin = ribbonL, ymax = ribbonU),
inherit.aes = FALSE, fill = "#616AA0", alpha = 0.2) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c(as_date("2000-06-10"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
theme_bw()
}
last <- geom_area(position = "identity", alpha = 0.4) +
geom_line(y = weather$Solar_Incoming_Total, linetype = "dashed") +
scale_fill_manual(values = c("#E2910F", "#08ABB2")) +
theme_bw() +
scale_y_continuous(name = "Precip. (mm)") +
scale_x_date(limits = c(as_date("2000-06-10"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
last <- ggplot(data = weather, aes(x = MonthDay, y = Ppt_mm_Tot, color = Year, fill = Year)) +
geom_area(position = "identity", alpha = 0.4) +
geom_line(y = weather$Solar_Incoming_Total, linetype = "dashed") +
scale_fill_manual(values = c("#E2910F", "#08ABB2")) +
theme_bw() +
scale_y_continuous(name = "Precip. (mm)") +
scale_x_date(limits = c(as_date("2000-06-20"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
patchwork3 <- last + final + plot_layout(ncol = 1)
patchwork3
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
patchwork3 <- last + final + plot_layout(ncol = 1)
patchwork3
final
intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
intervalPlotUk <- function(parDF, yName, intervalPct){
upperName = paste("Pred. Upper ", as.character(intervalPct), sep = "")
lowerName = paste("Pred. Lower ", as.character(intervalPct), sep = "")
PredCIntervals <- data.frame(matrix(ncol = 7, nrow = nrow(parDF))) %>%
mutate(X1 = parDF[, "Date"],
X2 = parDF[, "mean"],
X3 = parDF[, "upper"],
X4 = parDF[, "lower"],
X6 = parDF[, "upper"],
X7 = parDF[, "lower"]) %>%
rename(Date = X1,
"Pred. Mean" = X2,
!!upperName := X3,
!!lowerName := X4,
Observed = X5,
ribbonU = X6,
ribbonL = X7) %>%
pivot_longer(c(2:5), names_to = "Parameters", values_to = yName) %>%
mutate(Parameters = factor(Parameters, levels = c("Observed", "Pred. Mean", upperName, lowerName)))
graph = ggplot(PredCIntervals,
aes(x = Date, y = .data[[yName]], linetype = Parameters, color = Parameters, shape = Parameters)) +
geom_line() +
geom_point(data = subset(PredCIntervals,
Parameters == "Observed" | Parameters == "Pred. Mean")) +
scale_shape_manual(values = c(16, 1, NA, NA)) +
scale_linetype_manual(values = c("solid", "dashed", "dotted", "dotted")) +
scale_color_manual(values = c("#166170", "#166170", "#616AA0", "#616AA0")) +
geom_ribbon(aes(x = Date, ymin = ribbonL, ymax = ribbonU),
inherit.aes = FALSE, fill = "#616AA0", alpha = 0.2) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c(as_date("2000-06-10"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b") +
theme_bw()
return(graph)
}
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
final
intervalPlotUk <- function(parDF, yName, intervalPct){
upperName = paste("Pred. Upper ", as.character(intervalPct), sep = "")
lowerName = paste("Pred. Lower ", as.character(intervalPct), sep = "")
PredCIntervals <- data.frame(matrix(ncol = 7, nrow = nrow(parDF))) %>%
mutate(X1 = parDF[, "Date"],
X2 = parDF[, "mean"],
X3 = parDF[, "upper"],
X4 = parDF[, "lower"],
X6 = parDF[, "upper"],
X7 = parDF[, "lower"]) %>%
rename(Date = X1,
"Pred. Mean" = X2,
!!upperName := X3,
!!lowerName := X4,
Observed = X5,
ribbonU = X6,
ribbonL = X7) %>%
pivot_longer(c(2:5), names_to = "Parameters", values_to = yName) %>%
mutate(Parameters = factor(Parameters, levels = c("Observed", "Pred. Mean", upperName, lowerName)))
graph = ggplot(PredCIntervals,
aes(x = Date, y = .data[[yName]], linetype = Parameters, color = Parameters, shape = Parameters)) +
geom_line() +
geom_point(data = subset(PredCIntervals,
Parameters == "Observed" | Parameters == "Pred. Mean")) +
scale_shape_manual(values = c(16, 1, NA, NA)) +
scale_linetype_manual(values = c("solid", "dashed", "dotted", "dotted")) +
scale_color_manual(values = c("#166170", "#166170", "#616AA0", "#616AA0")) +
geom_ribbon(aes(x = Date, ymin = ribbonL, ymax = ribbonU),
inherit.aes = FALSE, fill = "#616AA0", alpha = 0.2) +
scale_y_continuous(limits = c(0, NA)) +
scale_x_date(limits = c(as_date("2014-06-10"), as_date("2014-10-15")),
breaks = "1 month",
date_labels = "%b") +
theme_bw()
return(graph)
}
final <- ggplot(data = something, aes(x = Day, y = VWC, group = Parameters)) +
geom_point() +
geom_line() +
theme_bw()
last <- ggplot(data = weather, aes(x = MonthDay, y = Ppt_mm_Tot, color = Year, fill = Year)) +
geom_area(position = "identity", alpha = 0.4) +
geom_line(y = weather$Solar_Incoming_Total, linetype = "dashed") +
scale_fill_manual(values = c("#E2910F", "#08ABB2")) +
theme_bw() +
scale_y_continuous(name = "Precip. (mm)") +
scale_x_date(limits = c(as_date("2000-06-20"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
patchwork3 <- last + final + plot_layout(ncol = 1)
patchwork3
last <- ggplot(data = weather, aes(x = MonthDay, y = Ppt_mm_Tot, color = Year, fill = Year)) +
geom_area(position = "identity", alpha = 0.4) +
scale_fill_manual(values = c("#E2910F", "#08ABB2")) +
theme_bw() +
scale_y_continuous(name = "Precip. (mm)") +
scale_x_date(limits = c(as_date("2000-06-20"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
patchwork3 <- last + final + plot_layout(ncol = 1)
patchwork3
final <- ggplot(data = something, aes(x = Day, y = VWC, group = Parameters)) +
geom_point() +
geom_line() +
theme_bw()
last <- ggplot(data = weather, aes(x = MonthDay, y = Ppt_mm_Tot, color = Year, fill = Year)) +
geom_area(position = "identity", alpha = 0.4) +
scale_fill_manual(values = c("#E2910F", "#08ABB2")) +
theme_bw() +
scale_y_continuous(name = "Precip. (mm)") +
scale_x_date(limits = c(as_date("2000-06-10"), as_date("2000-10-15")),
breaks = "1 month",
date_labels = "%b")
final <- intervalPlotUk(parDF = estimates3, yName = "VWC", intervalPct = 80)
patchwork3 <- last + final + plot_layout(ncol = 1)
patchwork3
library(dplyr)
library(tidyr)
library(stringr)
setwd("~/Documents/GitHub/lab/romero/KRLA/")
krla <- read.csv("KRLA_SW_202210_samples.csv")
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2))
View(krla)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 2))
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1))
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6))
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6)) %>%
pivot_wider(id_cols = sample_ID, names_from = nums)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6)) %>%
pivot_wider(id_cols = lets, names_from = nums, values_from = sample_ID)
View(krla)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6)) %>%
pivot_wider(id_cols = c("lets", "plt"), names_from = nums, values_from = sample_ID)
View(krla)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6))
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq())
View(krla)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq(by = 1))
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq(1, 497, by = 1))
View(krla)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq(1, 497, by = 1),
trueID = paste("KL", str_sub(sample_ID, end = 2), as.character(rep), sep = "_"))
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq(1, 497, by = 1),
trueID = paste("KL", str_sub(sample_ID, end = 2), as.character(rep), sep = "_")) %>%
pivot_wider(id_cols = c("lets", "plt"), names_from = nums, values_from = trueID)
View(krla)
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq(1, 497, by = 1),
trueID = paste("KL", str_sub(sample_ID, end = 2), as.character(rep), sep = "_")) %>%
pivot_wider(id_cols = c("plt", "lets"), names_from = nums, values_from = trueID) %>%
krla_final <- matrix()
krla <- read.csv("KRLA_SW_202210_samples.csv") %>%
filter(sample_ID != "EMPTY") %>%
mutate(nums = str_sub(cell_location, start = 2),
lets = str_sub(cell_location, end = 1),
plt = str_sub(well_plate, start = 6),
rep = seq(1, 497, by = 1),
trueID = paste("KL", str_sub(sample_ID, end = 2), as.character(rep), sep = "_")) %>%
pivot_wider(id_cols = c("plt", "lets"), names_from = nums, values_from = trueID)
View(krla)
write.csv(krla, "KRLA_extraction_plates.csv")
write.csv(krla, "KRLA_extraction_plates.csv", row.names = FALSE)
library(knitr)
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
library(ggmap)
library(devtools)
require(ggplot2)
require(ggsci)
require(ggrepel)
library(data.table)
library(patchwork)
library(RColorBrewer)
library(tidyr)
library(MetBrewer)
#library(MetBrewer)
setwd("~/Documents/GitHub/lab/romero/KRLA/")
register_google('HIDE')
ggmap_hide_api_key()
google_key()
KRLAcoord <- read.csv('KRLA_latlong_formap.csv', header=T) %>%
subset(plated == 'y')
names(KRLAcoord) <- c('Name','Pop','Lat','Long')
KRLAcoord <- read.csv('KRLA_latlong_formap.csv', header=T) %>%
subset(plated == 'y')
names(KRLAcoord) <- c('Name','Pop','Lat','Long')
map <- get_stamenmap(bbox = c(left = -120.8, bottom = 33.9, right = -114.2, top = 42.1),
zoom=8, maptype = 'terrain-background')
